# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "The tesseract release version to build; e.g. '5.5.1'"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # https://github.com/tesseract-ocr/tesseract/blob/main/.github/workflows/autotools-openmp.yml
      - name: Get source code
        uses: actions/checkout@v4
        with:
          repository: tesseract-ocr/tesseract
          ref: ${{ inputs.version }}
          fetch-depth: 1

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl \
            libarchive-dev \
            libcairo2-dev \
            libcurl4 \
            libcurl4-openssl-dev \
            libleptonica-dev \
            libpango1.0-dev

      - name: Setup Tesseract
        run: |
          ./autogen.sh

      - name: Configure Tesseract
        run: |
          ./configure \
            --disable-debug \
            --disable-doc \
            --disable-graphics \
            --disable-shared \
            --enable-openmp \
            --prefix=$PWD/dist \
            'CXX=g++' \
            'CXXFLAGS=-g -O2 -fno-math-errno -Wall -Wextra -Wpedantic'
    
      - name: Make Tesseract
        run: |
          make -j $(nproc)

      - name: Make Training
        run: |
          make training -j $(nproc)

      - name: Install binaries
        run: |
          sudo make --debug=b install training-install

      - name: Upload built files
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.version }}
          path: dist

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4

      - name: Compress files
        run: zip -r ${{ inputs.version }}.zip ${{ inputs.version }}

      - name: Create draft release
        uses: softprops/action-gh-release@v2        
        with:
          tag_name: ${{ inputs.version }}
          draft: true
          files: ${{ inputs.version }}.zip
